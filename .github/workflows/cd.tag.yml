---
name: Pull Request Tag Creation
on:
  pull_request:
    types: [labeled, unlabeled, closed]

# Allow a subsequently queued workflow run to interrupt a previous run
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test-semver:
    # Only run on merged PRs to master/main or when labels change
    if: |
      (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master') ||
      (github.event.action == 'labeled' || github.event.action == 'unlabeled')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Semantic Version
        id: semver
        uses: rapidstack/PR-Label-Semver-Action@v1.3.6

      - name: Git Tag Creation & Push
        # if: github.event.pull_request.merged == true
        uses: actions/github-script@v7.0.1
        env:
          TAG: ${{ steps.semver.outputs.string }}
        with:
          script: |
            const { TAG } = process.env

            // Check if tag already exists
            try {
              const existingTag = await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${TAG}`
              });

              console.log(`Tag ${TAG} already exists, skipping creation`);
              return;
            } catch (error) {
              if (error.status !== 404) throw error;
            }

            // Create new tag
            const createTagResponse = await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${TAG}`,
              sha: context.sha
            });

            // Push the tag to the repository
            await github.rest.git.updateRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${TAG}`,
              sha: context.sha,
              force: true
            });

            console.log(`Created and pushed new tag: ${TAG}`);
